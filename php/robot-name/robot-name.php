<?php
class Robot {

    private static $namesUsed = [];
    private $name;

    public function getName($attempt = 1) : string
    {
        if ($this->name) {
            return $this->name;
        }

        if ($attempt === 10) {
            throw new \ErrorException('Too many attempts used');
        }

        $name = $this->generateName();

        if (in_array($name, self::$namesUsed)) {
            return $this->getName($attempt += 1);
        }
        self::$namesUsed[] = $this->name = $name;
        return $name;
    }
    public function reset() : void
    {
        $this->name = null;
    }
    private function generateName() : string
    {
        return sprintf(
            '%s%03d',
            $this->generateString('ABCEDFGHIJKLMNOPQRSTUVWXYZ', 2),
            random_int(0, 999)
        );
    }
    private function generateString(string $thingsToChooseFrom, int $lengthToGenerate) : string
    {
        $characters = [];

        //Gets the limit for the random number to be generated by using the length of the string above
        //This is because it is being used to generate an index
        $limit = mb_strlen($thingsToChooseFrom, '8bit') - 1;

        for ($i = 0; $i < $lengthToGenerate; $i++) {
            //Gets a random character from charactersToChooseFrom using random_int to generate a random index
            $characters[] = $thingsToChooseFrom[random_int(0, $limit)];
        }
        return implode('', $characters);
    }
}
